stages:
  - docker
  - test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

cache:
  key: ${CI_JOB_NAME}
  paths:
    - ${CI_PROJECT_DIR}/services/book/.venv/
  
build-python-ci-image:

  image: docker:19.03.0 # or docker:20.10.2 
  services:
    - docker:19.03.0-dind
  stage: docker
  before_script:
    - cd ci-cd/python/
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t registry.gitlab.com/ithingv34/book-api:cicd-python3.8-slim .
    - docker push registry.gitlab.com/ithingv34/book-api:cicd-python3.8-slim

include:
  - local: /services/book/ci-cd.yml


service-talk-booking-code-quality:
  stage: test
  image: registry.gitlab.com/ithingv34/book-api:cicd-python3.9-slim
  before_script:
    - cd services/book/
    - poetry install
  script:
    - poetry run flake8 .
    - poetry run black . --check
    - poetry run isort . --check-only --profile black
    - poetry run bandit .
    - poetry run safety check
  only:
    refs:
      - merge_requests
      - master
    changes:
      - services/book/**/*


service-talk-booking-tests:
  stage: test
  image: registry.gitlab.com/ithingv34/book-api:cicd-python3.9-slim
  before_script:
    - cd services/book/
    - poetry install
  script:
    - poetry run python -m pytest --junitxml=report.xml --cov=./ --cov-report=xml tests/unit tests/integration
  after_script:
    - bash <(curl -s https://codecov.io/bash)
  artifacts:
    when: always
    reports:
      junit: services/book/report.xml
  only:
    refs:
      - merge_requests
      - master
    changes:
      - services/book/**/*